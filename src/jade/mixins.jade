//- all 4 sizes are passed into the mixin in case a different ratio size is provided for the various sizes
mixin col(xs, sm, md, lg)
	- items = []
	- (xs > 1 && xs <= 12) ? items.push('col-xs-' + xs) : undefined
	- (sm > 1 && sm <= 12) ? items.push('col-sm-' + sm) : undefined
	- (md > 1 && md <= 12) ? items.push('col-md-' + md) : undefined
	- (lg > 1 && lg <= 12) ? items.push('col-lg-' + lg) : undefined
	- (!items.length) ? items.push('col-xs-12') : undefined
	section(class=items.join(' '))&attributes(attributes)
		if block
			block

mixin circledIcon(icon)
	span.fa-stack.fa-2x
		i.fa.fa-stack-2x.fa-circle
		i.fa.fa-stack-1x.fa-inverse(class='fa-{{#{icon}}}')

mixin solvedSection(puzzleObj)
	div(ng-if='isSolved(#{puzzleObj})')
		h3 #[i.fa.fa-check] SOLVED!
		button.btn.btn-success(ng-click='toggleNextClue(#{puzzleObj})' ng-class='{active: #{puzzleObj}.nextClue.visible}') #[i.fa.fa-search] Next Clue
		button.btn.btn-danger(ng-click='unsolve(#{puzzleObj})') #[i.fa.fa-exclamation-triangle] Unsolve
		.well(ng-show='#{puzzleObj}.nextClue.visible')
			p.lead
				span.fa-stack.fa-2x
					i.fa.fa-stack-2x.fa-circle.text-primary
					i.fa.fa-stack-1x.fa-inverse(class='fa-{{#{puzzleObj}.icon}}')
				| Code: {{#{puzzleObj}.nextClue.code}}
